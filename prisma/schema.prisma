generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model NutechUsers {
  id           String    @id @default(uuid()) @db.Text // if you want to autogenerate uuid from db @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String    @unique @db.Text
  password     String    @db.Text
  firstName    String    @map("first_name") @db.Text
  lastName     String    @map("last_name") @db.Text
  profileImage String?   @map("profile_image") @db.Text
  balance      Float     @default(0) @db.DoublePrecision
  createdAt    DateTime  @default(now()) @map("created_at") @db.Timestamptz(3)
  createdBy    String?   @map("created_by") @db.Text // map field name from "createdBy" to "created_by" in db
  updatedAt    DateTime  @updatedAt @map("updated_at") @db.Timestamptz(3)
  updatedBy    String?   @map("updated_by") @db.Text
  deletedAt    DateTime? @map("deleted_at") @db.Timestamptz(3)
  deletedBy    String?   @map("deleted_by") @db.Text

  transactions NutechTransactions[]

  @@index([deletedAt])
  @@map("nutech_users") // map model name "NutechUsers" to "nutech_users" in db
}

model NutechServices {
  id            Int       @id @default(autoincrement()) @db.Integer
  serviceCode   String    @unique @map("service_code") @db.Text
  serviceName   String    @map("service_name") @db.Text
  serviceIcon   String    @map("service_icon") @db.Text
  serviceTariff Float     @map("service_tariff") @db.DoublePrecision
  createdAt     DateTime  @default(now()) @map("created_at") @db.Timestamptz(3)
  createdBy     String?   @map("created_by") @db.Text
  updatedAt     DateTime  @updatedAt @map("updated_at") @db.Timestamptz(3)
  updatedBy     String?   @map("updated_by") @db.Text
  deletedAt     DateTime? @map("deleted_at") @db.Timestamptz(3)
  deletedBy     String?   @map("deleted_by") @db.Text

  transactions NutechTransactions[]

  @@index([deletedAt])
  @@map("nutech_services")
}

model NutechBanners {
  id          Int       @id @default(autoincrement()) @db.Integer
  bannerName  String    @unique @map("banner_name") @db.Text
  bannerImage String    @map("banner_image") @db.Text
  description String    @db.Text
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz(3)
  createdBy   String?   @map("created_by") @db.Text
  updatedAt   DateTime  @updatedAt @map("updated_at") @db.Timestamptz(3)
  updatedBy   String?   @map("updated_by") @db.Text
  deletedAt   DateTime? @map("deleted_at") @db.Timestamptz(3)
  deletedBy   String?   @map("deleted_by") @db.Text

  @@index([deletedAt])
  @@map("nutech_banners")
}

model NutechTransactions {
  id              Int       @id @default(autoincrement()) @db.Integer
  userId          String    @map("user_id") @db.Text
  serviceId       Int?      @map("service_id") @db.Integer
  transactionType String    @map("transaction_type") @db.Text
  totalAmount     Float     @map("total_amount") @db.DoublePrecision
  invoiceNumber   String    @map("invoice_number") @db.Text
  createdAt       DateTime  @default(now()) @map("created_at") @db.Timestamptz(3)
  createdBy       String?   @map("created_by") @db.Text
  updatedAt       DateTime  @updatedAt @map("updated_at") @db.Timestamptz(3)
  updatedBy       String?   @map("updated_by") @db.Text
  deletedAt       DateTime? @map("deleted_at") @db.Timestamptz(3)
  deletedBy       String?   @map("deleted_by") @db.Text

  user    NutechUsers     @relation(fields: [userId], references: [id])
  service NutechServices? @relation(fields: [serviceId], references: [id])

  @@index([userId, serviceId, transactionType, createdAt, invoiceNumber])
  @@map("nutech_transactions")
}
